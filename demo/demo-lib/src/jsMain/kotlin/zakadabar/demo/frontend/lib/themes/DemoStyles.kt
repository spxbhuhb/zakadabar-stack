/*
 * Copyright Â© 2020, Simplexion, Hungary and contributors. Use of this source code is governed by the Apache 2.0 license.
 */
package zakadabar.demo.frontend.lib.themes

import zakadabar.stack.frontend.resources.ZkColors
import zakadabar.stack.frontend.resources.css.ZkCssStyleSheet

/**
 * CSS styles are usually defined in objects.
 */
object DemoStyles : ZkCssStyleSheet() {

    // Define a style. The actual name of the CSS class is generated by
    // the stack and is stored in this variable.

    val exampleStyle by cssClass {

        // You can use pre-defined helpers to access most properties

        color = ZkColors.Red.c600
        backgroundColor = ZkColors.Gray.c300

        // If there is no helper, just add directly to [styles]

        styles["font-family"] = "monospace"

        // Some pseudo classes have helpers

        hover {
            color = ZkColors.white
        }

        // For the ones without helper use [on]

        on(":disabled") {
            color = ZkColors.white
        }

        // You can use media queries with [media]

        media("(min-width: 800px)") {
            width = 300
        }

        // You can use [on] directly for media queries

        on(media = "(min-width: 1200px)") {
            width = 600
        }

        // small = (max-width: 600px)
        // medium = (min-width: 800px)
        // large = (min-width: 1200px)

        small {
            fontSize = 12
        }

        medium {
            fontSize = 14
        }

        large {
            fontSize = 16
        }
    }

    val exampleButtonStyle by cssClass {
        border = "8px solid ${ZkColors.Green.a100}"
    }

    // Call [attach] to add the style sheet to the document. Without this the
    // style sheet is not known by the browser. For commonly used style sheets
    // [init] is fine, but you can dynamically attach / detach styles sheets
    // with the appropriate method call.

    init {
        attach()
    }

}